{"version":3,"file":"static/js/247.d7d69f7a.chunk.js","mappings":"kOA4DA,UAvDa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAOG,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACP,GAAkCL,EAAAA,EAAAA,WAAS,GAA3C,eAAOO,EAAP,KAAkBC,EAAlB,KAqBD,OAnBAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,GACb,IAAME,EAAS,mCAAG,+GAESC,MAAM,sCAAD,OACYN,EADZ,4BACuCO,EAAAA,EADvC,oBAFd,cAERC,EAFQ,gBAKKA,EAASC,OALd,OAKRC,EALQ,OAMdb,EAAQa,EAAKd,MACbO,GAAa,GAPC,kDASdJ,EAAgB,wBAChBI,GAAa,GAVC,0DAAH,qDAcfE,GACD,GAAE,CAACL,KAGF,4BACE,iCACCE,IAAa,SAAC,IAAD,IACbJ,IAAgB,uBAAIA,IACJ,IAAhBF,EAAKe,QACJ,2EAEAf,EAAKgB,KAAI,SAAAC,GAAK,OACZ,4BACE,gBACEC,IACED,EAAME,aAAN,yCACsCF,EAAME,cACxC,oDAENC,IAAG,UAAKH,EAAMI,KAAX,YACHC,MAAM,SAER,yBACGL,EAAMI,KAAOJ,EAAMI,KAAO,GAD7B,MACoC,IACjCJ,EAAMM,UAAYN,EAAMM,UAAY,eAZ/BN,EAAMO,GADJ,MAoBrB,C","sources":["components/Cast/Cast.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { key } from '../../asset/pass';\nimport { Loader } from 'components/Loader/Loader'; \n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const { movieId } = useParams();\n   const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchCast = async () => {\n      try {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${key}&language=en-US`\n        );\n        const data = await response.json();\n        setCast(data.cast);\n        setIsLoading(false);\n      } catch (error) {\n        setErrorMessage('Failed to fetch cast');\n        setIsLoading(false);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Cast</h2>\n      {isLoading && <Loader />}\n      {errorMessage && <p>{errorMessage}</p>}\n      {cast.length === 0 ? (\n        <p>We don't have cast informations for this movie.</p>\n      ) : (\n        cast.map(actor => (\n          <div key={actor.id}>\n            <img\n              src={\n                actor.profile_path\n                  ? `https://image.tmdb.org/t/p/w200${actor.profile_path}`\n                  : 'https://poster.keepcalmandposters.com/3253015.jpg'\n              }\n              alt={`${actor.name} profile`}\n              width=\"200\"\n            />\n            <p>\n              {actor.name ? actor.name : ''} as{' '}\n              {actor.character ? actor.character : 'unknown'}\n            </p>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["useState","cast","setCast","errorMessage","setErrorMessage","movieId","useParams","isLoading","setIsLoading","useEffect","fetchCast","fetch","key","response","json","data","length","map","actor","src","profile_path","alt","name","width","character","id"],"sourceRoot":""}