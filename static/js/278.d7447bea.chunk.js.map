{"version":3,"file":"static/js/278.d7447bea.chunk.js","mappings":"iOAwFA,UAnFA,WAAmB,IAAD,EAChB,GAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAC/C,GAAkCT,EAAAA,EAAAA,WAAS,GAA3C,eAAOU,EAAP,KAAkBC,EAAlB,KAEMC,EAAiBJ,GAEvBK,EAAAA,EAAAA,YAAU,WACR,GAAuB,KAAnBD,EAAJ,CAGAD,GAAa,GACb,IAAMG,EAAU,mCAAG,+GAEQC,MAAM,qDAAD,OAC2BC,EAAAA,EAD3B,kBACwCJ,IAHrD,cAETK,EAFS,gBAKIA,EAASC,OALb,OAKTC,EALS,OAMff,EAAWe,EAAKhB,SAChBQ,GAAa,GAPE,kDASfS,QAAQC,MAAM,wBAAd,MACAV,GAAa,GAVE,0DAAH,qDAchBG,GAhBC,CAiBF,GAAE,CAACF,IAEJ,IAIMU,EAAY,mCAAG,WAAMC,GAAN,gFACnBZ,GAAa,GACbY,EAAMC,iBAFa,kBAIMT,MAAM,qDAAD,OAC2BC,EAAAA,EAD3B,kBACwCf,IALnD,cAIXgB,EAJW,gBAOEA,EAASC,OAPX,OAOXC,EAPW,OAQjBf,EAAWe,EAAKhB,SAChBQ,GAAa,GACbJ,EAAgB,SAAD,OAAUN,IAVR,kDAYjBmB,QAAQC,MAAM,6BAAd,MACAV,GAAa,GAbI,0DAAH,sDAiBlB,OACE,4BACE,kBAAMc,SAAUH,EAAhB,WACE,4BACE,kBAAOI,KAAK,OAAOC,MAAO1B,EAAO2B,SAzBpB,SAAAL,GACnBrB,EAASqB,EAAMM,OAAOF,MACvB,OAyBK,mBAAQD,KAAK,SAAb,uBAEDhB,IAAa,SAAC,IAAD,IACM,IAAnBP,EAAQ2B,QACP,4CAEA,wBACG3B,EAAQ4B,KAAI,SAAAC,GAAM,OACjB,yBACE,SAAC,KAAD,CACEC,GAAE,0CAAqCD,EAAOE,IAC9CC,MAAO,CACLC,KAAK,mCAAD,OAAqC9B,IAH7C,SAMG0B,EAAOK,SAPHL,EAAOE,GADC,QAgB5B,C","sources":["pages/Movies/Movies.jsx"],"sourcesContent":["import { useState, useEffect, } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { key } from '../../asset/pass';\nimport { Loader } from 'components/Loader/Loader';\n\nfunction Movies() {\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n  const [isLoading, setIsLoading] = useState(false);\n\n  const firstFechMovie = movieName\n\n  useEffect(() => {\n    if (firstFechMovie === '') {\n      return;\n    }\n    setIsLoading(true);\n    const fetchMovie = async () => {\n      try {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/search/movie?api_key=${key}&query=${firstFechMovie}`\n        );\n        const data = await response.json();\n        setResults(data.results);\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error fetching movie:', error);\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovie();\n  }, [firstFechMovie]);\n\n  const handleChange = event => {\n    setQuery(event.target.value);\n  };\n\n  const handleSubmit = async event => {\n    setIsLoading(true);\n    event.preventDefault();\n    try {\n      const response = await fetch(\n        `https://api.themoviedb.org/3/search/movie?api_key=${key}&query=${query}`\n      );\n      const data = await response.json();\n      setResults(data.results);\n      setIsLoading(false);\n      setSearchParams(`query=${query}`);\n    } catch (error) {\n      console.error('Error searching for movie:', error);\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <input type=\"text\" value={query} onChange={handleChange} />\n        </label>\n        <button type=\"submit\">Search</button>\n      </form>\n      {isLoading && <Loader />}\n      {results.length === 0 ? (\n        <p>No results yet.</p>\n      ) : (\n        <ul>\n          {results.map(result => (\n            <li key={result.id}>\n              <Link\n                to={`/goit-react-hw-05-movies/movies/${result.id}`}\n                state={{\n                  from: `/goit-react-hw-05-movies/movies?${searchParams}`,\n                }}\n              >\n                {result.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default Movies;\n"],"names":["useState","query","setQuery","results","setResults","useSearchParams","searchParams","setSearchParams","movieName","get","isLoading","setIsLoading","firstFechMovie","useEffect","fetchMovie","fetch","key","response","json","data","console","error","handleSubmit","event","preventDefault","onSubmit","type","value","onChange","target","length","map","result","to","id","state","from","title"],"sourceRoot":""}